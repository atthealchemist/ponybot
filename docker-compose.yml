version: '3'

services:
  redis:
    container_name: ponybot-redis
    build:
      context: ./redis
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks: 
      - backend
  
  db:
    container_name: ponybot-postgres-db
    restart: always
    build:
      context: ./db
    environment:
      POSTGRES_PASSWORD: \!ponybot_dev_user\!
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    networks: 
      - backend
  
  server:
    container_name: ponybot-backend-server
    restart: always
    build: 
      context: ./server
      dockerfile: Dockerfile
    env_file: .env
    command: server
    ports:
      - 8000:8000
    depends_on: 
      - db
      - celery
    volumes:
      - ./server:/ponybot/alpha/dev/
    networks:
      - frontend
      - backend
  
  bot:
    container_name: ponybot-bot
    restart: on-failure
    image: ponybot-alpha_server:latest
    build:
      context: ./bot
    command: bot
    networks: 
      - backend
  
  celery:
    container_name: ponybot-celery
    restart: on-failure
    image: ponybot-alpha_server:latest
    build:
      context: ./celery
    depends_on: 
      - redis
    command: celery
    networks:
      - backend

  nginx:
    container_name: ponybot-nginx
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    # links:
    #   - server:server
    ports:
      - 80:80
    volumes:
      - ./server/static/:/static/
    networks: 
      - frontend

networks:
  frontend:
  backend: